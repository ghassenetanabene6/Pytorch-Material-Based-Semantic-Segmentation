##############################################################################
####################### HRIM 2021 DATASET ####################################
##############################################################################
'''
HRIM PALETTE : 

# num_classes = 17 (with background)
# class_name:RGB_color

background:0,0,0        brick:114,114,223       ceramic:250,50,183      fabric:255,204,51
foliage:36,179,83       food:118,211,58         fur:184,61,245          glass:52,209,183
leather:212,103,122     metal:129,129,129       others:120,36,121       paper:185,123,7
plastic:255,0,0         skin:138,6,7            stone:71,51,163         water:42,125,209
wood:245,147,49
0	__background__
1	brick
2	ceramic
3	fabric
4	foliage
5	food
6	fur
7	glass
8	leather
9	metal
10	others
11	paper
12	plastic
13	skin
14	stone
15	water
16	wood

'''
import numpy as np

#Hrim palette for 17 classes
HRIM_palette17 = [  0,0,0,114,114,223,250,50,183,255,204,51,
                    36,179,83,118,211,58,184,61,245,52,209,183,
                    212,103,122,129,129,129,120,36,121,185,123,7,
                    255,0,0,138,6,7,71,51,163,42,125,209,
                    245,147,49
                ]

#Hrim 17 classes & id_classes
def hrim_classes17():
    classes = {     'background':0,        'brick':1,       'ceramic':2,      'fabric':3,
                    'foliage':4,           'food':5,        'fur':6,          'glass':7,
                    'leather':8,           'metal':9,       'others':10,       'paper':11,
                    'plastic':12,          'skin':13,       'stone':14,       'water':15,
                    'wood':16
             }
    return classes

#HRIM 17 classes { class_color_RGB : class_id }
palette_hrim17={
                (0,0,0):0,
                (114,114,223):1,
                (250,50,183):2,
                (255,204,51):3,
                (36,179,83):4,
                (118,211,58):5,
                (184,61,245):6,
                (52,209,183):7,
                (212,103,122):8,
                (129,129,129):9,
                (120,36,121):10,
                (185,123,7):11,
                (255,0,0):12,
                (138,6,7):13,
                (71,51,163):14,
                (42,125,209):15,
                (245,147,49):16

            }

'''
HRIM PALETTE : 

# num_classes = 9 (with background)
# class_name:RGB_color

old
background:0,0,0        ceramic:250,50,183      fabric:255,204,51
glass:52,209,183        metal:129,129,129       paper:185,123,7
plastic:255,0,0         stone:71,51,163         wood:245,147,49

new
background : (0,0,0)
ceramic : (240,143,192) #F08FC0
fabric : (49,206,112) #31CE70
glass : (81,194,213) #51C2D5
metal (120,122,145) #787A91
paper : (255,201,71) #FFC947
plastic : (236,70,70) #EC4646
stone : (0,90,141) #005A8D
wood :(245,169,98) #F5A962

'''

#Hrim palette for 9 classes
old_HRIM_palette9 = [   0,0,0,250,50,183,255,204,51,
                    52,209,183,129,129,129,185,123,7,
                    255,0,0,71,51,163,245,147,49
                ]
HRIM_palette9 = [   0,0,0,240,143,192,49,206,112,
                    81,194,213,120,122,145,255,201,71,
                    236,70,70,0,90,141,245,169,98
                ]

#Hrim 9 classes & id_classes
def hrim_classes9():
    classes = {     'background':0,        'ceramic':1,         'fabric':2,      
                    'glass':3,             'metal':4,           'paper':5,
                    'plastic':6,           'stone':7,           'wood':8
             }
    return classes


old_palette_hrim9={ 
                (0,0,0):0, #bg
                (250,50,183):1, #cer
                (255,204,51):2, #fab
                (52,209,183):3, #gl
                (129,129,129):4, #met
                (185,123,7):5, #pap
                (255,0,0):6, #pla
                (71,51,163):7, #stone
                (245,147,49):8 #wood
            }

palette_hrim9={ 
                (0,0,0):0,
                (240,143,192):1,
                (49,206,112):2,
                (81,194,213):3,
                (120,122,145):4,
                (255,201,71):5,
                (236,70,70):6,
                (0,90,141):7,
                (245,169,98):8
            }


def hrim_class_trasformation(transf):
    ''' 
        class transformation:
        old class -> new class

        brick -> stone
        foliage -> background
        food -> background
        fur -> fabric
        leather -> fabric
        others -> background
        skin -> background
        water -> background
    '''
    if transf =='old':
        class_colors = {                          
                            (114,114,223):(71,51,163),
                            (36,179,83):(0,0,0),
                            (118,211,58):(0,0,0),
                            (184,61,245):(255,204,51),
                            (212,103,122):(255,204,51),
                            (120,36,121):(0,0,0),
                            (138,6,7):(0,0,0),
                            (42,125,209):(0,0,0)
                        }
    elif transf=='new':
        class_colors = {    
                            (250,50,183):(240,143,192),
                            (255,204,51):(49,206,112),
                            (52,209,183):(81,194,213),
                            (129,129,129):(120,122,145),
                            (185,123,7):(255,201,71),
                            (255,0,0):(236,70,70),
                            (71,51,163):(0,90,141),
                            (245,147,49):(245,169,98)
                        }    
        
    return class_colors
    
def convert_from_color_segmentation(arr_3d,palette_hrim):
    arr_2d = np.zeros((arr_3d.shape[0], arr_3d.shape[1]), dtype=np.int32)
    palette = palette_hrim
    
    for c, i in palette.items():
        m = np.all(arr_3d == np.array(c).reshape(1, 1, 3), axis=2)
        arr_2d[m] = i
    
    return arr_2d

def get_id_classes(classes):
    all_classes = hrim_classes()
    id_classes = [all_classes[c] for c in classes]
    return id_classes

##############################################################################
####################### PASCAL VOC 2012 DATASE ###############################
##############################################################################

def get_voc_palette(num_classes):
    n = num_classes
    palette = [0]*(n*3)
    for j in range(0,n):
            lab = j
            palette[j*3+0] = 0
            palette[j*3+1] = 0
            palette[j*3+2] = 0
            i = 0
            while (lab > 0):
                    palette[j*3+0] |= (((lab >> 0) & 1) << (7-i))
                    palette[j*3+1] |= (((lab >> 1) & 1) << (7-i))
                    palette[j*3+2] |= (((lab >> 2) & 1) << (7-i))
                    i = i + 1
                    lab >>= 3
    return palette

##############################################################################
########################## ADE20K DATASE #####################################
##############################################################################

ADE20K_palette = [0,0,0,120,120,120,180,120,120,6,230,230,80,50,50,4,200,
                    3,120,120,80,140,140,140,204,5,255,230,230,230,4,250,7,224,
                    5,255,235,255,7,150,5,61,120,120,70,8,255,51,255,6,82,143,
                    255,140,204,255,4,255,51,7,204,70,3,0,102,200,61,230,250,255,
                    6,51,11,102,255,255,7,71,255,9,224,9,7,230,220,220,220,255,9,
                    92,112,9,255,8,255,214,7,255,224,255,184,6,10,255,71,255,41,
                    10,7,255,255,224,255,8,102,8,255,255,61,6,255,194,7,255,122,8,
                    0,255,20,255,8,41,255,5,153,6,51,255,235,12,255,160,150,20,0,
                    163,255,140,140,140,250,10,15,20,255,0,31,255,0,255,31,0,255,224
                    ,0,153,255,0,0,0,255,255,71,0,0,235,255,0,173,255,31,0,255,11,200,
                    200,255,82,0,0,255,245,0,61,255,0,255,112,0,255,133,255,0,0,255,
                    163,0,255,102,0,194,255,0,0,143,255,51,255,0,0,82,255,0,255,41,0,
                    255,173,10,0,255,173,255,0,0,255,153,255,92,0,255,0,255,255,0,245,
                    255,0,102,255,173,0,255,0,20,255,184,184,0,31,255,0,255,61,0,71,255,
                    255,0,204,0,255,194,0,255,82,0,10,255,0,112,255,51,0,255,0,194,255,0,
                    122,255,0,255,163,255,153,0,0,255,10,255,112,0,143,255,0,82,0,255,163,
                    255,0,255,235,0,8,184,170,133,0,255,0,255,92,184,0,255,255,0,31,0,184,
                    255,0,214,255,255,0,112,92,255,0,0,224,255,112,224,255,70,184,160,163,
                    0,255,153,0,255,71,255,0,255,0,163,255,204,0,255,0,143,0,255,235,133,255,
                    0,255,0,235,245,0,255,255,0,122,255,245,0,10,190,212,214,255,0,0,204,255,
                    20,0,255,255,255,0,0,153,255,0,41,255,0,255,204,41,0,255,41,255,0,173,0,
                    255,0,245,255,71,0,255,122,0,255,0,255,184,0,92,255,184,255,0,0,133,255,
                    255,214,0,25,194,194,102,255,0,92,0,255]


##############################################################################
####################### CityScpates DATASE ###################################
##############################################################################

CityScpates_palette = [128,64,128,244,35,232,70,70,70,102,102,156,190,153,153,153,153,153,
                        250,170,30,220,220,0,107,142,35,152,251,152,70,130,180,220,20,60,255,0,0,0,0,142,
                        0,0,70,0,60,100,0,80,100,0,0,230,119,11,32,128,192,0,0,64,128,128,64,128,0,192,
                        128,128,192,128,64,64,0,192,64,0,64,192,0,192,192,0,64,64,128,192,64,128,64,192,
                        128,192,192,128,0,0,64,128,0,64,0,128,64,128,128,64,0,0,192,128,0,192,0,128,192,
                        128,128,192,64,0,64,192,0,64,64,128,64,192,128,64,64,0,192,192,0,192,64,128,192,
                        192,128,192,0,64,64,128,64,64,0,192,64,128,192,64,0,64,192,128,64,192,0,192,192,
                        128,192,192,64,64,64,192,64,64,64,192,64,192,192,64,64,64,192,192,64,192,64,192,
                        192,192,192,192,32,0,0,160,0,0,32,128,0,160,128,0,32,0,128,160,0,128,32,128,128,
                        160,128,128,96,0,0,224,0,0,96,128,0,224,128,0,96,0,128,224,0,128,96,128,128,224,
                        128,128,32,64,0,160,64,0,32,192,0,160,192,0,32,64,128,160,64,128,32,192,128,160,
                        192,128,96,64,0,224,64,0,96,192,0,224,192,0,96,64,128,224,64,128,96,192,128,224,
                        192,128,32,0,64,160,0,64,32,128,64,160,128,64,32,0,192,160,0,192,32,128,192,160,
                        128,192,96,0,64,224,0,64,96,128,64,224,128,64,96,0,192,224,0,192,96,128,192,224,
                        128,192,32,64,64,160,64,64,32,192,64,160,192,64,32,64,192,160,64,192,32,192,192,
                        160,192,192,96,64,64,224,64,64,96,192,64,224,192,64,96,64,192,224,64,192,96,192,
                        192,224,192,192,0,32,0,128,32,0,0,160,0,128,160,0,0,32,128,128,32,128,0,160,128,
                        128,160,128,64,32,0,192,32,0,64,160,0,192,160,0,64,32,128,192,32,128,64,160,128,
                        192,160,128,0,96,0,128,96,0,0,224,0,128,224,0,0,96,128,128,96,128,0,224,128,128,
                        224,128,64,96,0,192,96,0,64,224,0,192,224,0,64,96,128,192,96,128,64,224,128,192,
                        224,128,0,32,64,128,32,64,0,160,64,128,160,64,0,32,192,128,32,192,0,160,192,128,
                        160,192,64,32,64,192,32,64,64,160,64,192,160,64,64,32,192,192,32,192,64,160,192,
                        192,160,192,0,96,64,128,96,64,0,224,64,128,224,64,0,96,192,128,96,192,0,224,192,
                        128,224,192,64,96,64,192,96,64,64,224,64,192,224,64,64,96,192,192,96,192,64,224,
                        192,192,224,192,32,32,0,160,32,0,32,160,0,160,160,0,32,32,128,160,32,128,32,160,
                        128,160,160,128,96,32,0,224,32,0,96,160,0,224,160,0,96,32,128,224,32,128,96,160,
                        128,224,160,128,32,96,0,160,96,0,32,224,0,160,224,0,32,96,128,160,96,128,32,224,
                        128,160,224,128,96,96,0,224,96,0,96,224,0,224,224,0,96,96,128,224,96,128,96,224,
                        128,224,224,128,32,32,64,160,32,64,32,160,64,160,160,64,32,32,192,160,32,192,32,
                        160,192,160,160,192,96,32,64,224,32,64,96,160,64,224,160,64,96,32,192,224,32,192,
                        96,160,192,224,160,192,32,96,64,160,96,64,32,224,64,160,224,64,32,96,192,160,96,
                        192,32,224,192,160,224,192,96,96,64,224,96,64,96,224,64,224,224,64,96,96,192,224,
                        96,192,96,224,192,0,0,0]


##############################################################################
########################### COCO DATASET #####################################
##############################################################################

COCO_palette = [31, 119, 180, 255, 127, 14, 44, 160, 44, 214, 39, 40, 148, 103, 189, 140, 86, 75, 227, 
    119, 194, 127, 127, 127, 188, 189, 34, 23, 190, 207, 31, 119, 180, 255, 127, 14, 44, 160, 44,
    214, 39, 40, 148, 103, 189, 140, 86, 75, 227, 119, 194, 127, 127, 127, 188, 189, 34, 23, 190, 207, 
    31, 119, 180, 255, 127, 14, 44, 160, 44, 214, 39, 40, 148, 103, 189, 140, 86, 75,
    227, 119, 194, 127, 127, 127, 188, 189, 34, 23, 190, 207, 31, 119, 180, 255, 127, 14, 44, 160, 44, 
    214, 39, 40, 148, 103, 189, 140, 86, 75, 227, 119, 194, 127, 127, 127, 188, 189, 
    34, 23, 190, 207, 31, 119, 180, 255, 127, 14, 44, 160, 44, 214, 39, 40, 148, 103, 189, 140, 86, 75, 
    227, 119, 194, 127, 127, 127, 188, 189, 34, 23, 190, 207, 31, 119, 180, 255, 127,
    14, 44, 160, 44, 214, 39, 40, 148, 103, 189, 140, 86, 75, 227, 119, 194, 127, 127, 127, 188, 189, 
    34, 23, 190, 207, 31, 119, 180, 255, 127, 14, 44, 160, 44, 214, 39, 40, 148, 103, 
    189, 140, 86, 75, 227, 119, 194, 127, 127, 127, 188, 189, 34, 23, 190, 207, 31, 119, 180, 255, 127, 
    14, 44, 160, 44, 214, 39, 40, 148, 103, 189, 140, 86, 75, 227, 119, 194, 127, 127
    , 127, 188, 189, 34, 23, 190, 207, 31, 119, 180, 255, 127, 14, 44, 160, 44, 214, 39, 40, 148, 103, 
    189, 140, 86, 75, 227, 119, 194, 127, 127, 127, 188, 189, 34, 23, 190, 207, 31, 119, 180, 255, 127, 14, 
    44, 160, 44, 214, 39, 40, 148, 103, 189, 140, 86, 75, 227, 119, 194, 127, 127, 
    127, 188, 189, 34, 23, 190, 207, 31, 119, 180, 255, 127, 14, 44, 160, 44, 214, 39, 40, 148, 103, 189, 
    140, 86, 75, 227, 119, 194, 127, 127, 127, 188, 189, 34, 23, 190, 207, 31, 119, 180, 255, 127, 14, 44, 
    160, 44, 214, 39, 40, 148, 103, 189, 140, 86, 75, 227, 119, 194, 127, 127, 127, 188, 189, 34, 23, 190, 
    207, 31, 119, 180, 255, 127, 14, 44, 160, 44, 214, 39, 40, 148, 103, 189, 140, 86, 75, 227, 119, 194, 
    127, 127, 127, 188, 189, 34, 23, 190, 207, 31, 119, 180, 255, 127, 14, 44, 160, 44, 214, 39, 40, 148, 
    103, 189, 140, 86, 75, 227, 119, 194, 127, 127, 127, 188, 189, 34, 23, 190, 207, 31, 119, 180, 255, 127,
    14, 44, 160, 44, 214, 39, 40, 148, 103, 189, 140, 86, 75, 227, 119, 194, 127, 127, 127, 188, 189, 34, 
    23, 190, 207, 31, 119, 180, 255, 127, 14, 44, 160, 44, 214, 39, 40, 148, 103, 189, 140, 86, 75, 227, 
    119, 194, 127, 127, 127, 188, 189, 34, 23, 190, 207, 31, 119, 180, 255, 127, 14, 44, 160, 44, 214, 39, 
    40, 148, 103, 189, 140, 86, 75, 227, 119, 194, 127, 127, 127, 188, 189, 34, 23, 190, 207, 31, 119, 
    180, 255, 127, 14, 44, 160, 44, 214, 39, 40, 148, 103, 189, 140, 86, 75, 227, 119, 194, 127, 127, 
    127, 188, 189, 34, 23, 190, 207, 31, 119, 180, 255, 127, 14]